<#@ template language="C#" hostspecific="True" #>
<#@ output extension=".cs" #>
<#@ import namespace="System" #>

<#
    // -------------------------------
    // AUTO VERSIONING FOR ASSEMBLY
    // -------------------------------
    //
    // This T4 template will compute a version number based on the current date and time.
    // It outputs a .cs file containing assembly-level version attributes.
    //
    // Version format: Major.Minor.Build.Revision
    //   Major and Minor are hard-coded below (e.g. 1 and 0).
    //   Build  = number of days since Jan 1, 2000 (UTC).
    //   Revision = number of seconds since midnight UTC / 2.
    //
    // Each build will produce a new “Build”/“Revision” pair automatically.
    // --------------------------------------------
    // Adjust majorVersion/minorVersion as desired.
#>
<#
    // 1) Define your static major and minor version:
    string majorVersion = "1";
    string minorVersion = "0";

    // 2) Compute "Build" as days since 2000-01-01 (UTC):
    DateTime epoch = new DateTime(2000, 1, 1, 0, 0, 0, DateTimeKind.Utc);
    TimeSpan sinceEpoch = DateTime.UtcNow.Subtract(epoch);
    int buildNumber = sinceEpoch.Days;

    // 3) Compute "Revision" as half the number of seconds since midnight (UTC):
    TimeSpan timeOfDay = DateTime.UtcNow.TimeOfDay;
    int revisionNumber = (int)(timeOfDay.TotalSeconds / 2);

    // 4) Compose the full version string:
    string versionString = $"{majorVersion}.{minorVersion}.{buildNumber}.{revisionNumber}";
#>
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by T4 at <#= DateTime.UtcNow.ToString("u") #>
//     AssemblyVersion and AssemblyFileVersion will be set to <#= versionString #>
// </auto-generated>
//------------------------------------------------------------------------------

using System.Reflection;

[assembly: AssemblyVersion("<#= versionString #>")]
[assembly: AssemblyFileVersion("<#= versionString #>")]
[assembly: AssemblyInformationalVersion("<#= versionString #>")]
